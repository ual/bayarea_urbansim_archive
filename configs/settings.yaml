aggregation_tables:
  - nodes
  - logsums


set_nan_price_to_zero: True


remove_invalid_building_ids: True


reconcile_residential_units_and_households: True


reconcile_non_residential_sqft_and_jobs: True


set_nan_price_to_zero: True


parcel_size_factor: 10.764


ave_sqft_per_unit_clip:
  lower: 800
  upper: 2500


acct_settings:
  disable: False
  sending_buildings_filter: general_type != 'Residential'
  sending_buildings_tax: non_residential_price * non_residential_sqft * 20 * .01 * .01
  sending_buildings_subaccount_def: city_id
  receiving_buildings_filter: pda_id > 0 and residential_units > 1


enable_supply_correction:
  price_col: residential_price
  submarket_col: zone_id
  submarket_table: zones
  warm_start: False
  multiplier_func: supply_and_demand_multiplier_func
  clip_final_price_low: 200
  clip_final_price_high: 2000
  kwargs:
    clip_change_low: 1.0
    clip_change_high: 1.3
    iterations: 20


table_reprocess:
  buildings:
    filter: "building_type_id >= 1 and building_type_id <= 14"
    fill_nas:
      building_type_id:
        how: "drop"
        type: "int"
      residential_units:
        how: "zero"
        type: "int"
      non_residential_sqft:
        how: "zero"
        type: "int"
      year_built:
        how: "median"
        type: "int"
      building_type_id:
        how: "mode"
        type: "int"


rates:
  households_relocation: .05
  jobs_relocation: .05
  simple_households_transition: .02
  simple_jobs_transition: .02


build_networks:
  name: osm_bayarea.h5
  max_distance: 1500


households_transition:
  add_columns:
    - income_quartile
  total_column: total_number_of_households


jobs_transition:
  add_columns:
    - empsix_id
  total_column: number_of_jobs


feasibility:
  parcel_filter: oldest_building > 1940 and oldest_building < 2000
  residential_to_yearly: True
  pass_through:
    - oldest_building
    - total_sqft
    - max_far
    - max_dua
    - land_cost
    - residential
    - min_max_fars
    - max_far_from_dua
    - max_height
    - max_far_from_heights
    - building_purchase_price
    - building_purchase_price_sqft


residential_developer:
  target_vacancy: .08
  min_unit_size: 1000
  bldg_sqft_per_job: 400


non_residential_developer:
  target_vacancy: .49
  bldg_sqft_per_job: 400


pusher:
  key: 7d78b1b3454b78aed26f
  secret: d87736e21dd7819926e6
  host: http://localhost:8765/
  region: bayarea


store: bayarea_v3.h5
#store: bayarea_v2.h5


scenario: baseline


scenario_inputs:
  baseline:
    zoning_table_name: zoning_baseline
  test:
    zoning_table_name: zoning_test


# this maps Synthicity's 25 employment categories to
# the six major employment categories traditionally
# used by MTC and ABAG for use in output to the Travel Model
naics_to_empsix:
  11: AGREMPN
  21: AGREMPN
  22: MWTEMPN
  23: OTHEMPN
  31: MWTEMPN
  32: MWTEMPN
  33: MWTEMPN
  42: MWTEMPN
  44: RETEMPN
  45: RETEMPN
  48: MWTEMPN
  49: MWTEMPN
  51: OTHEMPN
  52: FPSEMPN
  53: FPSEMPN
  54: FPSEMPN
  55: FPSEMPN
  56: FPSEMPN
  61: HEREMPN
  62: HEREMPN
  71: HEREMPN
  72: HEREMPN
  81: OTHEMPN
  92: OTHEMPN
  99: OTHEMPN


empsix_name_to_id:
  AGREMPN: 1
  MWTEMPN: 2
  RETEMPN: 3
  FPSEMPN: 4
  HEREMPN: 5
  OTHEMPN: 6


# this maps building type ids to general building types
# basically just reduces dimensionality
building_type_map:
  1: Residential
  2: Residential
  3: Residential
  4: Office
  5: Hotel
  6: School
  7: Industrial
  8: Industrial
  9: Industrial
  10: Retail
  11: Retail
  12: Residential
  13: Retail
  14: Office


# this maps building "forms" from the developer model
# to building types so that when the developer builds a
# "form" this can be converted for storing as a type
# in the building table - in the long run the developer
# forms and the building types should be the same and the
# developer model should account for the differences
form_to_btype:
  residential:
    - 1
    - 2
    - 3
  industrial:
    - 7
    - 8
    - 9
  retail:
    - 10
    - 11
  office:
    - 4
  mixedresidential:
    - 12
  mixedoffice:
    - 14


building_sqft_per_job:
  -1: 400
  1: 400
  2: 400
  3: 400
  4: 355
  5: 1161
  6: 470
  7: 661
  8: 960
  9: 825
  10: 445
  11: 445
  12: 383
  13: 383
  14: 383



## a mapping between the internal urbansim county_id identifier and FIPS code
county_id_to_fips:
 1: 1
 7: 13
 21: 41
 28: 55
 38: 75
 41: 81
 43: 85
 48: 95
 49: 97

## FIPS-level bmr monthly rent 2 person unit. From HUD
bmr_rent_2_persons:
  1: 920.0
  13: 920.0
  41: 1107.5
  55: 825.0
  75: 1107.5
  81: 1107.5
  85: 1020.0
  95: 767.5
  97: 770.0

 ## Jurisdiction-level inclusionary rates--PLACEHOLDER VALUES.
 ## These are not actual levels. They contain a .12 value for all
 ## cities with a "Y" in the inclusionary housing field in Pedro's
 ## BayAreaHousingPoliciesALL100614.xlsx
inclusionary_rates:
  1: 0.12
  2: 0.12
  3: 0.12
  4: 0.12
  5: 0.12
  8: 0.12
  9: 0.12
  10: 0.12
  11: 0.12
  12: 0.0
  14: 0.12
  15: 0.12
  16: 0.0
  17: 0.12
  19: 0.12
  21: 0.12
  23: 0.0
  24: 0.12
  25: 0.12
  26: 0.12
  27: 0.12
  29: 0.12
  30: 0.0
  31: 0.0
  32: 0.12
  34: 0.12
  37: 0.12
  38: 0.12
  39: 0.12
  40: 0.12
  41: 0.12
  44: 0.0
  46: 0.0
  47: 0.12
  48: 0.12
  49: 0.12
  50: 0.12
  51: 0.12
  53: 0.12
  55: 0.12
  65: 0.12
  68: 0.12
  70: 0.0
  71: 0.0
  72: 0.0
  73: 0.12
  74: 0.12
  75: 0.12
  76: 0.0
  77: 0.12
  78: 0.12
  79: 0.12
  80: 0.12
  81: 0.12
  82: 0.0
  83: 0.12
  84: 0.0
  87: 0.12
  88: 0.12
  89: 0.12
  90: 0.12
  91: 0.0
  92: 0.12
  93: 0.0
  94: 0.12
  96: 0.12
  97: 0.12
  98: 0.12
  99: 0.0
  100: 0.0
  101: 0.12